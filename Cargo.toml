[package]
name = "chess-engine"
version = "0.1.0"
edition = "2021"

[dependencies]
# Web framework
actix-web = "4"
actix-cors = "0.6"

# Async runtime
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

# PostgreSQL + chrono integration
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4"] }

# For JSON serialization/deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# Environment variables
dotenv = "0.15"

# Password hashing and authentication
argon2 = "0.5"
jsonwebtoken = "9"

# Logging
env_logger = "0.10"
log = "0.4"

# For error handling
thiserror = "1.0"

# Optional: If you use UUIDs in your database
uuid = { version = "1", features = ["serde", "v4"] }

[build-dependencies]
# Optional: to compile build scripts cleanly
dotenv = "0.15"
[package]
name = "chess-engine"
version = "0.1.0"
edition = "2021"

[dependencies]
# Web framework
actix-web = "4"
actix-cors = "0.6"

# Async runtime
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

# PostgreSQL + chrono integration
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4"] }

# For JSON serialization/deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# Environment variables
dotenv = "0.15"

# Password hashing and authentication
argon2 = "0.5"
jsonwebtoken = "9"

# Logging
env_logger = "0.10"
log = "0.4"

# For error handling
thiserror = "1.0"

# Optional: If you use UUIDs in your database
uuid = { version = "1", features = ["serde", "v4"] }

[build-dependencies]
# Optional: to compile build scripts cleanly
dotenv = "0.15"

[[bin]]
name = "server"
path = "chess-engine/src/main.rs"

